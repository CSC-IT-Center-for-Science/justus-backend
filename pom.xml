<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.2.6.RELEASE</version>
  </parent>
  
  <artifactId>backend</artifactId>
  <groupId>fi.csc.justus</groupId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <org.jooq.version>3.7.0</org.jooq.version>
    <model.mapper.version>0.7.4</model.mapper.version>
    <postgres.driver.version>9.4-1201-jdbc41</postgres.driver.version>
    <HikariCP.version>2.3.8</HikariCP.version>
    <flyway.version>3.2.1</flyway.version>
    <!-- overrides spring boot version -->
    <swagger.version>2.2.2</swagger.version>
    <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
    <spring.data.version>1.10.0.RELEASE</spring.data.version>
    <jersey.client.version>2.21</jersey.client.version>
  </properties>

  <scm>
    <developerConnection>scm:git:https://github.com/CSC-IT-Center-for-Science/justus-backend</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-commons</artifactId>
      <version>${spring.data.version}</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.8.5</version>
    </dependency>
    <!-- database dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>
    <!-- need Transient annotation -->
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgres.driver.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>${org.jooq.version}</version>
    </dependency>
    <dependency>
      <groupId>org.modelmapper.extensions</groupId>
      <artifactId>modelmapper-jooq</artifactId>
      <version>${model.mapper.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20140107</version>
    </dependency>

    <!-- TODO: configure -->
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${HikariCP.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${flyway.version}</version>
    </dependency>
    <!-- API docs -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>${swagger.version}</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>${swagger.version}</version>
    </dependency>

    <!-- helpers for better Java 8 -->
    <dependency>
      <groupId>com.javaslang</groupId>
      <artifactId>javaslang</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jool</artifactId>
      <version>0.9.7</version>
    </dependency>
    <dependency>
      <groupId>com.aol.cyclops</groupId>
      <artifactId>cyclops-pattern-matching</artifactId>
      <version>6.0.2</version>
    </dependency>
    <!-- /java8 -->
  </dependencies>
  
  <build>
    <finalName>justus-backend</finalName>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <!-- set debug level -->
          <include>logback.xml</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <jvmArguments>${jvm.fork.arguments}</jvmArguments>
          <arguments>
            <argument>--spring.profiles.active=demo</argument>
          </arguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>it.ozimov</groupId>
        <artifactId>yaml-properties-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>src/main/resources/config/application.yml</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>add-source</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sql-maven-plugin</artifactId>
        <version>1.5</version>
        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgres.driver.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <url>${spring.datasource.url}</url>
          <username>${spring.datasource.username}</username>
          <password>${spring.datasource.password}</password>
          <driver>${spring.datasource.driverClassName}</driver>
        </configuration>
        <executions>
          <execution>
            <id>clean-db</id>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <autocommit>true</autocommit>
              <srcFiles>
                <srcFile>src/main/resources/drop.sql</srcFile>
              </srcFiles>
            </configuration>
          </execution>
          <execution>
            <id>populate-db</id>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <autocommit>true</autocommit>
              <srcFiles>
                <srcFile>src/main/resources/data.sql</srcFile>
              </srcFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <rules>
            <requireMavenVersion>
              <message>
                You are running an older version of Maven. JUSTUS Backend requires at least Maven 3.0
              </message>
              <version>[3.0.0,)</version>
            </requireMavenVersion>
            <requireJavaVersion>
              <message>
                You are running an older version of Java. JUSTUS Backend requires at least JDK ${java.version}
              </message>
              <version>[${java.version}.0,)</version>
            </requireJavaVersion>
          </rules>
        </configuration>
      </plugin>
      <!-- disable surefire -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/generated/jooq</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.2</version>
        <configuration>
          <tagNameFormat>@{project.version}</tagNameFormat>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <nonFilteredFileExtensions>
            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
          </nonFilteredFileExtensions>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>demo</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <logback.loglevel>DEBUG</logback.loglevel>
      </properties>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>false</filtering>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <arguments>
                <argument>--spring.profiles.active=demo</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>generate-db</id>
      <properties>
        <logback.loglevel>DEBUG</logback.loglevel>
        <app.dbhost>postgres</app.dbhost>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
            <version>${flyway.version}</version>
            <!-- Note that we're executing the Flyway
                 plugin in the "generate-sources" phase -->
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <goals>
                  <goal>migrate</goal>
                </goals>
              </execution>
            </executions>
            <!-- Note that we need to prefix the db/migration
                 path with filesystem: to prevent Flyway
                 from looking for our migration scripts
                 only on the classpath -->
            <configuration>
              <url>${spring.datasource.url}</url>
              <user>${spring.datasource.username}</user>
              <password>${spring.datasource.password}</password>
              <locations>
                <location>filesystem:src/main/resources/db/migration</location>
              </locations>
              <validateOnMigrate>false</validateOnMigrate>
            </configuration>
          </plugin>
          <!-- The jOOQ code generator plugin -->
          <plugin>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen-maven</artifactId>
            <version>${org.jooq.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.driver.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>generate-postgres</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <jdbc>
                    <driver>${spring.datasource.driverClassName}</driver>
                    <url>${spring.datasource.url}</url>
                    <user>${spring.datasource.username}</user>
                    <password>${spring.datasource.password}</password>
                  </jdbc>
                  <generator>
                    <name>org.jooq.util.DefaultGenerator</name>
                    <database>
                      <name>org.jooq.util.postgres.PostgresDatabase</name>
                      <includes>.*</includes>
                      <excludes>.*NOTHING.*</excludes>
                      <dateAsTimestamp>true</dateAsTimestamp>
                      <schemata>
                        <schema>
                          <inputSchema>appback</inputSchema>
                          <outputSchema>appback</outputSchema>
                        </schema>
                      </schemata>
                    </database>
                    <generate>
                      <deprecated>false</deprecated>
                      <instanceFields>true</instanceFields>
                      <pojos>true</pojos>
                      <validationAnnotations>true</validationAnnotations>
                    </generate>
                    <target>
                      <packageName>fi.csc.justus.backend.jooq</packageName>
                      <directory>src/main/generated/jooq</directory>
                    </target>
                  </generator>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>prod</id>
      <properties>
        <logback.loglevel>INFO</logback.loglevel>
      </properties>
      <dependencies>
      </dependencies>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <arguments>
                <argument>--spring.profiles.active=prod</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
